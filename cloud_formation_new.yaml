AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Template for Lambda, API Gateway, and SNS'

Parameters:
  LambdaCodeS3Bucket:
    Type: String
    Description: 'S3 bucket where Lambda code is stored'
  LambdaCodeS3Key:
    Type: String
    Description: 'S3 key for Lambda code'

Resources:
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt MyLambdaRole.Arn
      FunctionName: MyLambdaFunction
      Runtime: nodejs14.x
      Timeout: 10
      MemorySize: 128
      Code:
        S3Bucket: !Ref LambdaCodeS3Bucket
        S3Key: !Ref LambdaCodeS3Key

  MyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  MyApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: MyApiGateway

  MyApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref MyApiGateway
      ParentId: !GetAtt MyApiGateway.RootResourceId
      PathPart: 'myresource'

  MyApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !GetAtt MyApiGatewayResource.Id
      RestApiId: !Ref MyApiGateway
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - LambdaArn: !GetAtt MyLambdaFunction.Arn

  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: 'MySNSTopic'

Outputs:
  ApiGatewayInvokeURL:
    Description: 'Invoke URL of the API Gateway endpoint'
    Value: !Sub 'https://${MyApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/myresource'

  SNSTopicArn:
    Description: 'ARN of the SNS Topic'
    Value: !Ref MySNSTopic
